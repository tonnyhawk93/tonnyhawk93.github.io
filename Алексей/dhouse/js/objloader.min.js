THREE.OBJLoader=function(){function u(){var f={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materialLibraries:[],startObject:function(b,d){if(this.object&&!1===this.object.fromDeclaration)this.object.name=b,this.object.fromDeclaration=!1!==d;else{var c=this.object&&"function"===typeof this.object.currentMaterial?this.object.currentMaterial():void 0;this.object&&"function"===typeof this.object._finalize&&this.object._finalize(!0);this.object={name:b||"",fromDeclaration:!1!==d,geometry:{vertices:[],
normals:[],colors:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(c,b){var a=this._finalize(!1);a&&(a.inherited||0>=a.groupCount)&&this.materials.splice(a.index,1);a={index:this.materials.length,name:c||"",mtllib:Array.isArray(b)&&0<b.length?b[b.length-1]:"",smooth:void 0!==a?a.smooth:this.smooth,groupStart:void 0!==a?a.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(a){a={index:"number"===typeof a?a:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,
groupEnd:-1,groupCount:-1,inherited:!1};a.clone=this.clone.bind(a);return a}};this.materials.push(a);return a},currentMaterial:function(){if(0<this.materials.length)return this.materials[this.materials.length-1]},_finalize:function(c){var b=this.currentMaterial();b&&-1===b.groupEnd&&(b.groupEnd=this.geometry.vertices.length/3,b.groupCount=b.groupEnd-b.groupStart,b.inherited=!1);if(c&&1<this.materials.length)for(var a=this.materials.length-1;0<=a;a--)0>=this.materials[a].groupCount&&this.materials.splice(a,
1);c&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth});return b}};c&&c.name&&"function"===typeof c.clone&&(c=c.clone(0),c.inherited=!0,this.object.materials.push(c));this.objects.push(this.object)}},finalize:function(){this.object&&"function"===typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(b,d){var c=parseInt(b,10);return 3*(0<=c?c-1:c+d/3)},parseNormalIndex:function(b,d){var c=parseInt(b,10);return 3*(0<=c?c-1:c+d/3)},parseUVIndex:function(b,
d){var c=parseInt(b,10);return 2*(0<=c?c-1:c+d/2)},addVertex:function(b,d,c){var e=this.vertices,k=this.object.geometry.vertices;k.push(e[b+0],e[b+1],e[b+2]);k.push(e[d+0],e[d+1],e[d+2]);k.push(e[c+0],e[c+1],e[c+2])},addVertexPoint:function(b){var d=this.vertices;this.object.geometry.vertices.push(d[b+0],d[b+1],d[b+2])},addVertexLine:function(b){var d=this.vertices;this.object.geometry.vertices.push(d[b+0],d[b+1],d[b+2])},addNormal:function(b,d,c){var e=this.normals,k=this.object.geometry.normals;
k.push(e[b+0],e[b+1],e[b+2]);k.push(e[d+0],e[d+1],e[d+2]);k.push(e[c+0],e[c+1],e[c+2])},addColor:function(b,d,c){var e=this.colors,k=this.object.geometry.colors;k.push(e[b+0],e[b+1],e[b+2]);k.push(e[d+0],e[d+1],e[d+2]);k.push(e[c+0],e[c+1],e[c+2])},addUV:function(b,d,c){var e=this.uvs,k=this.object.geometry.uvs;k.push(e[b+0],e[b+1]);k.push(e[d+0],e[d+1]);k.push(e[c+0],e[c+1])},addUVLine:function(b){var d=this.uvs;this.object.geometry.uvs.push(d[b+0],d[b+1])},addFace:function(b,d,c,e,k,a,g,f,l){var h=
this.vertices.length;b=this.parseVertexIndex(b,h);d=this.parseVertexIndex(d,h);c=this.parseVertexIndex(c,h);this.addVertex(b,d,c);void 0!==e&&""!==e&&(c=this.uvs.length,b=this.parseUVIndex(e,c),d=this.parseUVIndex(k,c),c=this.parseUVIndex(a,c),this.addUV(b,d,c));void 0!==g&&""!==g&&(e=this.normals.length,b=this.parseNormalIndex(g,e),d=g===f?b:this.parseNormalIndex(f,e),c=g===l?b:this.parseNormalIndex(l,e),this.addNormal(b,d,c));0<this.colors.length&&this.addColor(b,d,c)},addPointGeometry:function(b){this.object.geometry.type=
"Points";for(var d=this.vertices.length,c=0,e=b.length;c<e;c++)this.addVertexPoint(this.parseVertexIndex(b[c],d))},addLineGeometry:function(b,d){this.object.geometry.type="Line";for(var c=this.vertices.length,e=this.uvs.length,f=0,a=b.length;f<a;f++)this.addVertexLine(this.parseVertexIndex(b[f],c));c=0;for(a=d.length;c<a;c++)this.addUVLine(this.parseUVIndex(d[c],e))}};f.startObject("",!1);return f}function r(f){this.manager=void 0!==f?f:THREE.DefaultLoadingManager;this.materials=null}var v=/^[og]\s*(.+)?/,
w=/^mtllib /,x=/^usemtl /;r.prototype={constructor:r,load:function(f,b,d,c){var e=this,k=new THREE.FileLoader(e.manager);k.setPath(this.path);k.load(f,function(a){b(e.parse(a))},d,c)},setPath:function(f){this.path=f;return this},setMaterials:function(f){this.materials=f;return this},parse:function(f){console.time("OBJLoader");var b=new u;-1!==f.indexOf("\r\n")&&(f=f.replace(/\r\n/g,"\n"));-1!==f.indexOf("\\\n")&&(f=f.replace(/\\\n/g,""));var d=f.split("\n"),c,e="function"===typeof"".trimLeft;f=0;
for(var k=d.length;f<k;f++){var a=d[f];a=e?a.trimLeft():a.trim();var g=a.length;if(0!==g&&(g=a.charAt(0),"#"!==g))if("v"===g)switch(a=a.split(/\s+/),a[0]){case "v":b.vertices.push(parseFloat(a[1]),parseFloat(a[2]),parseFloat(a[3]));7<=a.length&&b.colors.push(parseFloat(a[4]),parseFloat(a[5]),parseFloat(a[6]));break;case "vn":b.normals.push(parseFloat(a[1]),parseFloat(a[2]),parseFloat(a[3]));break;case "vt":b.uvs.push(parseFloat(a[1]),parseFloat(a[2]))}else if("f"===g){a=a.substr(1).trim();var m=a.split(/\s+/);
a=[];g=0;for(c=m.length;g<c;g++){var l=m[g];0<l.length&&(l=l.split("/"),a.push(l))}m=a[0];g=1;for(c=a.length-1;g<c;g++){l=a[g];var h=a[g+1];b.addFace(m[0],l[0],h[0],m[1],l[1],h[1],m[2],l[2],h[2])}}else if("l"===g){g=a.substring(1).trim().split(" ");c=[];m=[];if(-1===a.indexOf("/"))c=g;else for(a=0,l=g.length;a<l;a++)h=g[a].split("/"),""!==h[0]&&c.push(h[0]),""!==h[1]&&m.push(h[1]);b.addLineGeometry(c,m)}else if("p"===g)a=a.substr(1).trim(),a=a.split(" "),b.addPointGeometry(a);else if(null!==(c=v.exec(a)))a=
(" "+c[0].substr(1).trim()).substr(1),b.startObject(a);else if(x.test(a))b.object.startMaterial(a.substring(7).trim(),b.materialLibraries);else if(w.test(a))b.materialLibraries.push(a.substring(7).trim());else if("s"===g){if(c=a.split(" "),1<c.length?(a=c[1].trim().toLowerCase(),b.object.smooth="0"!==a&&"off"!==a):b.object.smooth=!0,a=b.object.currentMaterial())a.smooth=b.object.smooth}else if("\x00"!==a)throw Error('THREE.OBJLoader: Unexpected line: "'+a+'"');}b.finalize();d=new THREE.Group;d.materialLibraries=
[].concat(b.materialLibraries);f=0;for(k=b.objects.length;f<k;f++)if(e=b.objects[f],a=e.geometry,g=e.materials,c="Line"===a.type,m="Points"===a.type,l=!1,0!==a.vertices.length){h=new THREE.BufferGeometry;h.addAttribute("position",new THREE.Float32BufferAttribute(a.vertices,3));0<a.normals.length?h.addAttribute("normal",new THREE.Float32BufferAttribute(a.normals,3)):h.computeVertexNormals();0<a.colors.length&&(l=!0,h.addAttribute("color",new THREE.Float32BufferAttribute(a.colors,3)));0<a.uvs.length&&
h.addAttribute("uv",new THREE.Float32BufferAttribute(a.uvs,2));for(var p=[],q=0,r=g.length;q<r;q++){var t=g[q];a=void 0;if(null!==this.materials)if(a=this.materials.create(t.name),!c||!a||a instanceof THREE.LineBasicMaterial)!m||!a||a instanceof THREE.PointsMaterial||(n=new THREE.PointsMaterial({size:10,sizeAttenuation:!1}),THREE.Material.prototype.copy.call(n,a),n.color.copy(a.color),n.map=a.map,n.lights=!1,a=n);else{var n=new THREE.LineBasicMaterial;THREE.Material.prototype.copy.call(n,a);n.color.copy(a.color);
n.lights=!1;a=n}a||(a=c?new THREE.LineBasicMaterial:m?new THREE.PointsMaterial({size:1,sizeAttenuation:!1}):new THREE.MeshPhongMaterial,a.name=t.name);a.flatShading=t.smooth?!1:!0;a.vertexColors=l?THREE.VertexColors:THREE.NoColors;p.push(a)}if(1<p.length){q=0;for(r=g.length;q<r;q++)t=g[q],h.addGroup(t.groupStart,t.groupCount,q);a=c?new THREE.LineSegments(h,p):m?new THREE.Points(h,p):new THREE.Mesh(h,p)}else a=c?new THREE.LineSegments(h,p[0]):m?new THREE.Points(h,p[0]):new THREE.Mesh(h,p[0]);a.name=
e.name;d.add(a)}console.timeEnd("OBJLoader");return d}};return r}();